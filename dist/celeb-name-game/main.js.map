{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/home/cast/cast.component.css","webpack:///./src/app/components/home/cast/cast.component.html","webpack:///./src/app/components/home/cast/cast.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/home/movie/movie.component.css","webpack:///./src/app/components/home/movie/movie.component.html","webpack:///./src/app/components/home/movie/movie.component.ts","webpack:///./src/app/components/landing/landing.component.css","webpack:///./src/app/components/landing/landing.component.html","webpack:///./src/app/components/landing/landing.component.ts","webpack:///./src/app/components/landing/login/login.component.css","webpack:///./src/app/components/landing/login/login.component.html","webpack:///./src/app/components/landing/login/login.component.ts","webpack:///./src/app/components/landing/register/register.component.css","webpack:///./src/app/components/landing/register/register.component.html","webpack:///./src/app/components/landing/register/register.component.ts","webpack:///./src/app/components/navigation/navigation.component.css","webpack:///./src/app/components/navigation/navigation.component.html","webpack:///./src/app/components/navigation/navigation.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/services/auth/auth-guard.service.ts","webpack:///./src/app/services/auth/auth.service.ts","webpack:///./src/app/services/data/cast/cast.service.ts","webpack:///./src/app/services/data/movie/movie.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@import url(https://fonts.googleapis.com/css?family=Roboto:400,300,100,700,500);\"","module.exports = \"<app-navigation></app-navigation>\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n \n}\n","// Angular\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\n\r\n// Firebase\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\r\nimport { AngularFireAuthModule } from 'angularfire2/auth';\r\n\r\n// Services\r\nimport { AuthService } from './services/auth/auth.service';\r\nimport { AuthGuard } from './services/auth/auth-guard.service';\r\nimport { MovieService } from './services/data/movie/movie.service'\r\n\r\nimport { environment } from './../environments/environment';\r\nimport { appRoutes } from './routes';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n// Components\r\nimport { LandingComponent } from './components/landing/landing.component';\r\nimport { RegisterComponent } from './components/landing/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from './components/landing/login/login.component';\r\nimport { NavigationComponent } from './components/navigation/navigation.component';\r\nimport { MovieComponent } from './components/home/movie/movie.component';\nimport { CastComponent } from './components/home/cast/cast.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LandingComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    NavigationComponent,\r\n    MovieComponent,\r\n    CastComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireDatabaseModule,\r\n    AngularFireAuthModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot()\r\n  ],\r\n  providers: [AuthService, \r\n    AuthGuard, \r\n    MovieService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"card h-100 d-inline-block\\\" style=\\\"width: 18rem;\\\">\\r\\n  <img class=\\\"card-img-top\\\" src=\\\"{{image}}\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <ul class=\\\"list-group\\\" >\\r\\n      <li class=\\\"list-group-item font-weight-bold\\\" *ngFor=\\\"let castName of castNames; let i=index\\\" [class.active]=\\\"selectedIndex === i\\\" \\r\\n      (click)=\\\"selectedCast($event, i)\\\"  data-id=\\\"{{index}}:{{cast.id}}:{{castName.name}}\\\">{{castName.name}} ({{castName.character}})</li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-cast',\n  templateUrl: './cast.component.html',\n  styleUrls: ['./cast.component.css']\n})\nexport class CastComponent implements OnInit {\n\n  @Input() cast: any;\n  @Input() castNames: any;\n  @Input() index:any;\n  @Output() addToMap = new EventEmitter<string>();\n\n  private IMAGE_BASE: String = \"https://image.tmdb.org/t/p/w154\";\n  private image: String;\n\n  private selectedIndex: number = null;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.image = this.IMAGE_BASE + this.cast.profile_path;\n    // console.log('init '+this.selectedAnswers);\n  }\n\n  // Cast member selected\n  selectedCast(event: any, index: number){\n    let target = event.target || event.srcElement || event.currentTarget;\n    let idAttr = target.attributes.id;\n    let value = idAttr.nodeValue;\n\n    this.setIndex(index);\n    this.addToMap.emit(value);\n  }\n\n  // Set index of selected element\n  setIndex(index: number){\n    this.selectedIndex = index;\n  }\n\n\n}\n\n","module.exports = \"ul {\\r\\n    list-style-type: none;\\r\\n  }\\r\\n\\r\\n  .loader {\\r\\n    border: 5px solid #f3f3f3;\\r\\n    border-top: 5px solid #555; \\r\\n    border-radius: 50%;\\r\\n    width: 120px;\\r\\n    height: 120px;\\r\\n    -webkit-animation: spin 1s linear infinite;\\r\\n            animation: spin 1s linear infinite;\\r\\n}\\r\\n\\r\\n  @-webkit-keyframes spin {\\r\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\r\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\r\\n}\\r\\n\\r\\n  @keyframes spin {\\r\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\r\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\r\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"offset-md-2 col-md-8\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title\\\">Search for a movie title</h5>\\r\\n          <form class=\\\"form-inline\\\" novalidate [formGroup]=\\\"movieForm\\\">\\r\\n            <input class=\\\"form-control col-md-12\\\" [ngModel]=\\\"title\\\" (keyup)=\\\"searchMovie()\\\" formControlName=\\\"title\\\" type=\\\"search\\\" placeholder=\\\"Enter movie's name\\\">\\r\\n            <div class=\\\"col-md-12\\\" *ngIf=\\\"moviesPresent\\\">\\r\\n              <ul class=\\\"list-group\\\">\\r\\n                <app-movie *ngFor=\\\"let movie of movies\\\" [movie]=\\\"movie\\\" (gameStarted)=\\\"gameStarted($event)\\\" (findCast)=\\\"findCast($event)\\\"></app-movie>\\r\\n              </ul>\\r\\n            </div>\\r\\n            <!-- <button class=\\\"btn btn-outline-success col-md-2 my-2 my-sm-0\\\" type=\\\"submit\\\" (click)=\\\"searchMovie()\\\" [disabled]=\\\"movieForm.invalid\\\">Search</button> -->\\r\\n            <!-- <div *ngIf=\\\"movieForm.get('title').invalid && (movieForm.get('title').dirty || movieForm.get('title').touched)\\\" class=\\\"alert alert-danger col-md-12\\\">\\r\\n              <div *ngIf=\\\"movieForm.get('title').errors.required\\\">\\r\\n                Movie title is required.\\r\\n              </div>\\r\\n            </div> -->\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"loader m-auto\\\" *ngIf=\\\"castLoading\\\"></div>\\r\\n\\r\\n  <div class=\\\"row mt-5\\\" *ngIf=\\\"castPresent\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header font-weight-bold\\\">Naming the celebrities from {{movieForm.get('title').value}}</div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card-group\\\">\\r\\n                  <app-cast class=\\\"mx-auto my-4\\\" *ngFor=\\\"let member of cast; let i=index\\\" [index]=\\\"i\\\" [cast]=\\\"member\\\" [castNames]=\\\"castNames\\\" (addToMap)=\\\"addToMap($event)\\\" ></app-cast>\\r\\n                  <!-- <ul class=\\\"list-group\\\">\\r\\n                    <li *ngFor=\\\"let member of cast\\\" class=\\\"font-weight-bold text-center\\\">{{member.name}} ({{member.character}}) </li>\\r\\n                  </ul> -->\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-4 offset-md-4\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-success btn-block\\\" (click)=\\\"submitAnswers()\\\">SUBMIT</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\nimport { MovieService } from '../../services/data/movie/movie.service';\r\nimport { CastService } from '../../services/data/cast/cast.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { Movie } from '../../models/movie.model';\r\nimport { empty, size, set } from '@typed/hashmap';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  public movieForm: FormGroup;\r\n  private movies: any[];\r\n  private moviesPresent: boolean = false;\r\n\r\n  private cast: String[] = new Array();\r\n  private castNames: String[] = new Array();\r\n  private castPresent: boolean = false;\r\n  private castLoading: boolean = false;\r\n\r\n  private counter: number = 0;\r\n\r\n  private selectedAnswers = empty<number, string>();\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private movieService: MovieService,\r\n    private castService: CastService,\r\n    private toastr: ToastrService) {\r\n\r\n    // Initialize form\r\n    this.movieForm = this.fb.group({\r\n      title: ['', Validators.required]\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // Get movie details on Keyup\r\n  searchMovie() {\r\n    const movieTitle = this.movieForm.value.title;\r\n    if (movieTitle.length >= 3) {\r\n      this.movieService.searchMovie(movieTitle).subscribe(\r\n        (movies: any) => {\r\n          this.movies = movies.results;\r\n          this.moviesPresent = true;\r\n        },\r\n        (error: any) => {\r\n          this.moviesPresent = false;\r\n          this.toastr.error(`No movie by the name ${movieTitle} exists in the database`, 'Invalid movie title', {\r\n            timeOut: 3000,\r\n          });\r\n        });\r\n    } else {\r\n      this.moviesPresent = false;\r\n      this.castPresent = false;\r\n    }\r\n  }\r\n\r\n  // Trigger game start after movie selection -> Hide the autocomplete box and update textbox\r\n  gameStarted(title: string) {\r\n    // console.log('gameStarted '+title);\r\n    this.movieForm.get('title').setValue(title);\r\n    this.moviesPresent = false;\r\n  }\r\n\r\n  // GET MOVIE CAST\r\n  findCast(movieId: string) {\r\n    // Reset variables\r\n    this.cast = new Array();\r\n    this.castNames = new Array();\r\n    this.counter = 0;\r\n\r\n    this.castLoading = true;\r\n    this.castService.searchCast(movieId).subscribe(\r\n      (casts: any) => {\r\n        for (let i in casts.cast) {\r\n          let e = casts.cast[i];\r\n          if (e.profile_path != null) {\r\n            this.cast.push(e);\r\n\r\n            let json: any = {\r\n              \"id\": e.id,\r\n              \"name\": e.name,\r\n              \"character\": e.character\r\n            };\r\n            this.castNames.push(json);\r\n            this.counter++;\r\n          }\r\n          if (this.counter == 5)\r\n            break;\r\n          this.castPresent = true;\r\n        }\r\n        this.castLoading = false;\r\n\r\n        // TODO : store in DB\r\n\r\n        // Shuffle list\r\n        this.castNames = this.shuffle(this.castNames);\r\n      },\r\n      (error: any) => {\r\n        this.castPresent = false;\r\n        this.castLoading = false;\r\n        this.toastr.error(`No cast inforrmation present for the movie ${this.movieForm.value.title} exists in the database. Please try another movie.`, 'No cast present', {\r\n          timeOut: 3000,\r\n        });\r\n      });\r\n  }\r\n\r\n  // Shuffle array\r\n  shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n  }\r\n\r\n  // Add to answers map\r\n  addToMap(value: any) {\r\n    let selected = value.split(\":\");\r\n\r\n    let id = selected[0];\r\n    let cast_id = selected[1];\r\n    let cast_name = selected[2];\r\n\r\n    // Add to map\r\n    this.selectedAnswers = set(id, cast_id + \":\" + cast_name, this.selectedAnswers);\r\n  }\r\n\r\n  // Submit answers\r\n  submitAnswers() {\r\n    //Check if all answers are submitted. If not confirm box\r\n    let submitted = size(this.selectedAnswers);\r\n    if (submitted < 5) {\r\n\r\n      // Alert confirm box\r\n      if (!window.confirm(\"You haven't selected all answers! Are you sure you want to submit your answers?\")) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Submit answers\r\n    console.log('continue');\r\n  }\r\n\r\n}\r\n","module.exports = \"img{\\r\\n    width: 32px;\\r\\n}\\r\\n\\r\\nli { \\r\\n    cursor: pointer; \\r\\n}\"","module.exports = \"<!-- <div class=\\\"card h-100 d-inline-block\\\" style=\\\"width: 18rem;\\\">\\n  <img class=\\\"card-img-top\\\" src=\\\"{{image}}\\\" alt=\\\"{{movie.title}}'s poster'\\\">\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"font-weight-bold text-center\\\">{{movie.title}}</div>\\n    <p class=\\\"card-text text-truncate\\\" data-toggle=\\\"tooltip\\\" title=\\\"{{movie.overview}}\\\">{{movie.overview}}</p>\\n    <button href=\\\"#\\\" class=\\\"btn btn-primary\\\">Play!</button>\\n  </div>\\n</div> -->\\n\\n<li class=\\\"list-group-item\\\" (click)=\\\"playGame()\\\">\\n  <img class=\\\"card-img-top\\\" src=\\\"{{image}}\\\" alt=\\\"{{movie.title}}'s poster\\\">\\n  <span class=\\\"ml-3 text-primary\\\"><b>{{movie.title}}</b> ({{movie.release_date | slice:0:4 }})</span>\\n</li>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\n\nexport class MovieComponent implements OnInit {\n\n  // Actor image\n  // https://image.tmdb.org/t/p/w500/eIkFHNlfretLS1spAcIoihKUS62.jpg\n\n  @Input() movie: any;\n  @Output() gameStarted = new EventEmitter<string>();\n  @Output() findCast = new EventEmitter<string>();\n\n  private IMAGE_BASE: String = \"https://image.tmdb.org/t/p/w154\";\n  private image: String;\n  \n\n  constructor() {\n  }\n\n  ngOnInit() {\n    // Placeholder for no poster\n    if(this.movie.poster_path == null)\n      this.image = 'assets/img/poster-placeholder.jpg';\n    else\n      this.image = this.IMAGE_BASE + this.movie.poster_path;\n  }\n\n  playGame() {\n    // Update movie title in search box\n    this.gameStarted.emit(this.movie.title);\n\n    // Get Cast\n    const movieId = this.movie.id;\n    this.findCast.emit(movieId);\n  }\n\n}\n","module.exports = \"@import url(https://fonts.googleapis.com/css?family=Roboto:400,300,100,700,500);\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 offset-md-3\\\">\\n      <div class=\\\"card bg-light mb-3\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"panel panel-login\\\">\\n            <div class=\\\"panel-heading\\\">\\n              <div class=\\\"row\\\">\\n                <ul class=\\\"nav nav-pills nav-fill col-md-12 pr-0\\\">\\n                  <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" routerLink='/login' routerLinkActive='active'>Log In</a>\\n                  </li>\\n                  <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" routerLink='/register' routerLinkActive='active'>Register</a>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n            <div class=\\\"panel-body mt-5\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12 p-0\\\">\\n                  <router-outlet></router-outlet>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".btn-login {\\r\\n  background-color: #E8E9EC;\\r\\n  outline: none;\\r\\n  color: #2D3B55;\\r\\n  font-size: 14px;\\r\\n  height: auto;\\r\\n  font-weight: normal;\\r\\n  padding: 14px 0;\\r\\n  text-transform: uppercase;\\r\\n  border: none;\\r\\n  border-radius: 0px;\\r\\n  box-shadow: none;\\r\\n}\\r\\n.btn-login:hover,\\r\\n.btn-login:focus {\\r\\n  color: #fff;\\r\\n  background-color: #007bff;\\r\\n}\"","module.exports = \"<form novalidate [formGroup]=\\\"loginForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"email\\\" tabindex=\\\"1\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email Address\\\" pattern=\\\"^\\\\w+@[a-zA-Z_]+?\\\\.[a-zA-Z]{2,3}$\\\">\\n  </div>\\n  <div *ngIf=\\\"loginForm.get('email').invalid && (loginForm.get('email').dirty || loginForm.get('email').touched)\\\" class=\\\"alert alert-danger\\\">\\n    <div *ngIf=\\\"loginForm.get('email').errors.required\\\">\\n      Email address is required.\\n    </div>\\n    <div *ngIf=\\\"loginForm.get('email').errors.pattern\\\">\\n      Email address is not properly formatted.\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\" tabindex=\\\"2\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\">\\n  </div>\\n  <div *ngIf=\\\"loginForm.get('password').invalid && (loginForm.get('password').dirty || loginForm.get('password').touched)\\\"\\n    class=\\\"alert alert-danger\\\">\\n    <div *ngIf=\\\"loginForm.get('password').errors.required\\\">\\n      Password is required.\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"col-sm-6 offset-sm-3\\\">\\n    <input type=\\\"submit\\\" tabindex=\\\"3\\\" (click)=\\\"signInWithEmail()\\\" [disabled]=\\\"loginForm.invalid\\\" class=\\\"form-control btn btn-dark\\\"\\n      value=\\\"LOG IN\\\">\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../../services/auth/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder, \n              private authService: AuthService, \n              private router: Router,\n              private toastr: ToastrService) {\n    this.loginForm = this.fb.group({\n      email:['', Validators.required],\n      password:['', Validators.required]\n    })\n  }\n  ngOnInit() {\n  }\n\n  // TODO : Validations\n  signInWithEmail() {\n    this.authService.signInRegular(this.loginForm.value.email, this.loginForm.value.password)\n      .then((res) => {\n        // console.log(res);\n        this.router.navigate(['home']);\n      })\n      .catch((err) => {\n        // console.log('error: ' + err)\n        this.toastr.error('You\\'ve entered invalid credentials', 'Invalid credentials', {\n          timeOut: 3000,\n        });\n      });\n  }\n\n}\n","module.exports = \".btn-register {\\r\\n    background-color: #E8E9EC;\\r\\n    outline: none;\\r\\n    color: #2D3B55;\\r\\n    font-size: 14px;\\r\\n    height: auto;\\r\\n    font-weight: normal;\\r\\n    padding: 14px 0;\\r\\n    text-transform: uppercase;\\r\\n    border: none;\\r\\n    border-radius: 0px;\\r\\n    box-shadow: none;\\r\\n  }\\r\\n  \\r\\n  .btn-register:hover,\\r\\n  .btn-register:focus {\\r\\n    color: #fff;\\r\\n    background-color: #007bff;\\r\\n  }\\r\\n  \"","module.exports = \"<form novalidate autocomplete=\\\"off\\\" [formGroup]=\\\"regForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"email\\\" tabindex=\\\"1\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email Address\\\" pattern=\\\"^\\\\w+@[a-zA-Z_]+?\\\\.[a-zA-Z]{2,3}$\\\">\\n  </div>\\n  <div *ngIf=\\\"regForm.get('email').invalid && (regForm.get('email').dirty || regForm.get('email').touched)\\\" class=\\\"alert alert-danger\\\">\\n    <div *ngIf=\\\"regForm.get('email').errors.required\\\">\\n      Email address is required.\\n    </div>\\n    <div *ngIf=\\\"regForm.get('email').errors.pattern\\\">\\n      Email address is not properly formatted.\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\" tabindex=\\\"2\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\">\\n  </div>\\n  <div *ngIf=\\\"regForm.get('password').invalid && (regForm.get('password').dirty || regForm.get('password').touched)\\\" class=\\\"alert alert-danger\\\">\\n    <div *ngIf=\\\"regForm.get('password').errors.required\\\">\\n      Password is required.\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-sm-6 offset-sm-3\\\">\\n    <input type=\\\"submit\\\" tabindex=\\\"3\\\" (click)=\\\"registerInWithEmail()\\\" [disabled]=\\\"regForm.invalid\\\" class=\\\"form-control btn btn-dark\\\"\\n      value=\\\"REGISTER\\\">\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../../services/auth/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  public regForm: FormGroup;\n\n  constructor(private fb: FormBuilder, \n              private auth: AuthService) {\n    this.regForm = this.fb.group({\n      email:['', Validators.required],\n      password:['', Validators.required]\n    })\n  }\n\n  ngOnInit() {\n  }\n\n\n  registerInWithEmail(): void {\n    const email = this.regForm.value.email;\n    const password = this.regForm.value.password;\n\n    this.auth.signUpWithEmail(email, password);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-primary\\\" style=\\\"margin-bottom: 25px\\\">\\n  <!-- TODO: Add navigation links -->\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n    Celebrity Name Game\\n  </a>\\n  <div class=\\\"form-inline my-2 my-lg-0\\\">\\n    <button *ngIf=\\\"this.auth.isLoggedIn()\\\" class=\\\"btn btn-outline-light my-2 my-sm-0\\\" (click)=logout()>Logout</button>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth/auth.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor(private auth: AuthService) {\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Routes } from '@angular/router'\r\nimport { HomeComponent } from './components/home/home.component';\r\n\r\nimport { AuthGuard } from './services/auth/auth-guard.service';\r\n\r\nimport { RegisterComponent } from './components/landing/register/register.component';\r\nimport { LandingComponent } from './components/landing/landing.component';\r\nimport { LoginComponent } from './components/landing/login/login.component';\r\n\r\nexport const appRoutes: Routes = [\r\n    {   \r\n        path: 'home', \r\n        component: HomeComponent ,\r\n        // canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'register', component: LandingComponent,\r\n        children: [{ path: '', component: RegisterComponent }]\r\n    },\r\n    {\r\n        path: 'login', component: LandingComponent,\r\n        children: [{ path: '', component: LoginComponent }]\r\n    },\r\n    { path : '', redirectTo:'/login', pathMatch : 'full'}\r\n    \r\n];","import { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private router: Router, private authService: AuthService, private toastr: ToastrService) { }\n    canActivate() {\n        if (this.authService.isLoggedIn()) {\n            return true;\n        }\n        this.toastr.error('You\\'re not logged in', 'Error', {\n            timeOut: 3000,\n        });\n        this.router.navigate(['/']);\n        return false;\n    }\n}","import { Injectable } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\nimport { Observable } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable()\nexport class AuthService {\n\n  private user: Observable<firebase.User>;\n  private userDetails: firebase.User = null;\n\n  constructor(private _firebaseAuth: AngularFireAuth, \n    private router: Router,\n    private toastr: ToastrService) {\n    this.user = _firebaseAuth.authState;\n    this.user.subscribe(\n      (user) => {\n        if (user) {\n          this.userDetails = user;\n        }\n        else {\n          this.userDetails = null;\n        }\n      }\n    );\n  }\n\n  signInRegular(email: string, password: string) {\n    const credential = firebase.auth.EmailAuthProvider.credential(email, password);\n    return this._firebaseAuth.auth.signInWithEmailAndPassword(email, password)\n  }\n\n  signUpWithEmail(email: string, password: string): Promise<void> {\n    return this._firebaseAuth.auth.createUserWithEmailAndPassword(email, password)\n      .then((res) => {\n        this.router.navigate(['/login']);\n        this.toastr.success('You\\'ve successfully registered. Please log in to continue', 'Success', {\n          timeOut: 3000,\n        });\n      })\n      .catch((error) => {\n        // console.log(error)\n        this.toastr.error('There was an error during registration. Please try again', 'Error', {\n          timeOut: 3000,\n        });\n      });\n  }\n\n\n  isLoggedIn() {\n    if (this.userDetails == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  logout() {\n    this._firebaseAuth.auth.signOut()\n      .then((res) => this.router.navigate(['/']));\n  }\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CastService {\n\n  private baseURL: string = \"https://api.themoviedb.org/3/movie/\"\n  private endPoint: string = \"/credits?api_key=1bb15929878554efc3fde2e1f9fdbc1f&language=en-US\";\n\n  constructor(private http: HttpClient) { }\n\n  // Cast\n  // https://api.themoviedb.org/3/movie/550/credits?api_key=1bb15929878554efc3fde2e1f9fdbc1f&language=en-US\n\n  searchCast(movieId: string): Observable<any> {\n    return this.http.get<any>(this.baseURL+movieId+this.endPoint);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Movie } from '../../../models/movie.model';\nimport { Observable } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n\n  private baseURL: string = \"https://api.themoviedb.org/3/search/movie?api_key=1bb15929878554efc3fde2e1f9fdbc1f&language=en-US\\\n  &page=1&include_adult=false&query=\";\n\n  private movies: Movie[]\n\n  constructor(private http: HttpClient) { }\n\n  //Movie\n  //http://api.themoviedb.org/3/movie/550/casts?api_key=1bb15929878554efc3fde2e1f9fdbc1f\n\n  searchMovie(movieTitle: string): Observable<Movie[]> {\n    return this.http.get<Movie[]>(this.baseURL + movieTitle);\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase:{\n    apiKey: \"AIzaSyBZd6b7Un5ecqri_7l_l65IDPklyfGI5To\",\n    authDomain: \"celeb-name-game.firebaseapp.com\",\n    databaseURL: \"https://celeb-name-game.firebaseio.com\",\n    projectId: \"celeb-name-game\",\n    storageBucket: \"celeb-name-game.appspot.com\",\n    messagingSenderId: \"466366433630\"\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}